import itertools
import os
import collections
import json
import glob
from snakemake.utils import R
from snakemake.utils import min_version
min_version("3.2")
from snakemake.exceptions import MissingInputException
TARGET=os.environ['TARGET']
# Snakemake Base location
shell.prefix("""
#PBS -S /bin/bash
source /etc/prolibrary.d/modules.sh
module load snakemake
set -e -o pipefail
sleep 20s
""")
path=TARGET.split("/")
PATH=os.path.dirname(TARGET)
FCID=path[-2]
onstart:
	shell("echo 'bcl2fastq conversion started {FCID} '| mutt -s 'bcl2fastq status ' `whoami`@mail.nih.gov ")
onerror:
	shell("echo 'bcl2fastq pipeline failed on {FCID} '|mutt -s ' bcl2fastq status' `whoami`@mail.nih.gov ")
onsuccess:
	shell("echo 'bcl2fastq pipeline finished successfully on {FCID} ' |mutt -s ' bcl2fastq status' `whoami`@mail.nih.gov  ")

f = open(PATH+"/SampleSheet.csv", 'r')
FCName=FCID.split("_")
FCName=FCName[-1][1:]
TARGET = []
for line in f:
	if 'Sample_ID' in line: 
		column = line.split(",")
		sampleID    =column.index('Sample_ID')
		for line in f:
			column = line.split(",")
			TARGET += [PATH+"/Unaligned_patidar/Sample_"+column[sampleID]+"_"+FCName+"/Sample_"+column[sampleID]+"_"+FCName+"_R1.fastq.gz"]
			TARGET += [PATH+"/Unaligned_patidar/Sample_"+column[sampleID]+"_"+FCName+"/Sample_"+column[sampleID]+"_"+FCName+"_R2.fastq.gz"]
TARGET +=[PATH+"/Unaligned_patidar/Sample_Undetermined_"+FCName+"/Sample_Undetermined_"+FCName+"_R2.fastq.gz"]

rule Final:
	input: TARGET
	output: "{run}/bcl2fastq.done"
	params:
		rulename = "final",
		batch    = "-l nodes=1,cput=100:00:00,pvmem=5gb,ncpus=3"
	shell: """
	############################
	touch {output}
	############################
	"""
	
rule Merge:
	input:
		"{run}/Unaligned_patidar/Reports/html/tree.html",
		"{run}/SampleSheet.csv"
	output:
		R1="{run}/Unaligned_patidar/Sample_{library}_{FCID}/Sample_{library}_{FCID}_R1.fastq.gz",
		R2="{run}/Unaligned_patidar/Sample_{library}_{FCID}/Sample_{library}_{FCID}_R2.fastq.gz",
	params:
		rulename = "merge",
		batch    = "-l nodes=1,cput=100:00:00,pvmem=5gb,ncpus=3"
	shell: """
	############################
	R1=`find {wildcards.run}/Unaligned_patidar/ -name "{wildcards.library}*_R1_*gz*" | tr '\\n' ' '`
	R2=`find {wildcards.run}/Unaligned_patidar/ -name "{wildcards.library}*_R2_*gz*" | tr '\\n' ' '`

	/bin/zcat ${{R1}} |gzip >{wildcards.run}/Unaligned_patidar/Sample_{wildcards.library}_{wildcards.FCID}/Sample_{wildcards.library}_{wildcards.FCID}_R1.fastq.gz
	/bin/zcat ${{R2}} |gzip >{wildcards.run}/Unaligned_patidar/Sample_{wildcards.library}_{wildcards.FCID}/Sample_{wildcards.library}_{wildcards.FCID}_R2.fastq.gz
	############################
	"""	
###########################################################################
rule BCL2FASTQ:
	input:
		"{run}/RTAComplete.txt"
	output:
		"{run}/Unaligned_patidar/Reports/html/tree.html"
	params:
		rulename = "bcl2fastq",
		batch    = "-l nodes=1,cput=100:00:00,pvmem=72gb,ncpus=16"
	shell: """
	############################
	module load bcl2fastq2
	runName=`basename {wildcards.run}`
	cp {wildcards.run}/SampleSheet.csv {wildcards.run}/SampleSheet_ori.csv
	sed -i 's/~/_/g' {wildcards.run}/SampleSheet.csv
	bcl2fastq -R {wildcards.run} -o {wildcards.run}/Unaligned_patidar/
	chgrp -R "nci-frederick pcc all users" {wildcards.run}/Unaligned_patidar/
	############################
	"""
